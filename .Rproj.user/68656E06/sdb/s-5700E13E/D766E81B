{
    "collab_server" : "",
    "contents" : "var nodes = {};\n\nshinyjs.paintGraph = function(sifParse){\n \n \n  var nodes = []\n\tvar links = [];\n  \tvar nodeName = [];\n  \tvar nodeType = [];\n  \tfor(i=0; i<sifParse[0].nodos.length; i++){\n    \tnodeName.push(sifParse[0].nodos[i]);\n    \tnodeType.push(sifParse[0].tipoNodo[i]);\n  \t}\n  \n  \tfor(i=0; i<sifParse[0].source.length; i++){\n    \tlink={source: sifParse[0].source[i], target:sifParse[0].target[i], type:sifParse[0].tipoLink[i]};\n    \tlinks.push(link)\n  \t}\n\n  \tlinks.forEach(function(link) {\n    \tlink.source = nodes[link.source] || (nodes[link.source] = {name: link.source});\n    \tlink.target = nodes[link.target] || (nodes[link.target] = {name: link.target});\n  \t});\n\n  \tvar width = 1400,\n\t\theight = 700,\n\t\tradius = 6;\n\t  console.log(nodes);\n  \tvar force = d3.layout.force()\n\t\t.nodes(d3.values(nodes))\n\t\t.links(links)\n\t\t.size([width, height])\n\t\t.linkDistance(80)\n\t\t.charge(-200)\n\t\t.on(\"tick\", tick)\n\t\t.gravity(0.07)\n\t\t.start();\n\n\tvar drag = force.drag()\n\t\t.on(\"dragstart\", dragstart);\n\n\tvar svg = d3.select(\".paintGraph\").append(\"svg\")\n\t  \t.attr(\"width\", width)\n\t \t.attr(\"height\", height);\n\t  \n\t  \n\tsvg.append(\"defs\").selectAll(\"marker\")\n\t\t.data([\"controlOf\",\"outputLink\"])\n\t\t.enter().append(\"marker\")\n\t  \t.attr(\"id\", function(d) { return d; })\n\t  \t.attr(\"viewBox\", \"0 -5 10 10\")\n\t  \t.attr(\"refX\", 15)\n\t  \t.attr(\"refY\", -1)\n\t  \t.attr(\"markerWidth\", 6)\n\t  \t.attr(\"markerHeight\", 6)\n\t  \t.attr(\"orient\", \"auto\")\n\t\t.append(\"path\")\n\t  \t.attr(\"d\", \"M0,-5L10,0L0,5\");\n\t  \n\tvar path = svg.append(\"g\").selectAll(\"path\")\n\t\t.data(force.links())\n\t\t.enter().append(\"line\")\n\t\t.attr(\"class\", function(d) { return \"link \" + d.type; })\n\t\t.attr(\"marker-end\", function(d) { return \"url(#\" + d.type + \")\"; });\n\n\n\tvar rectSet = []\n \tvar circleSet = []\n  \tvar circleSMSet = []\n\t  \n\tforce.nodes().forEach(function(d){\n\t    i = nodeName.indexOf(d.name);\n\t    if(nodeType[i]==\"NProt\"){\n\t      circleSet.push(d);\n\t    }else if(nodeType[i]==\"control\"){\n\t      rectSet.push(d);\n\t    }else if(nodeType[i]==\"NSM\"){\n\t      circleSMSet.push(d);\n\t    }else {\n\t    \tcircleSet.push(d);\n\t    }\n\t});\n\t  \n\tvar control = svg.append(\"g\").selectAll(\"rect\")\n\t  \t.data(rectSet)\n\t\t.enter().append(\"rect\")\n\t\t.attr(\"width\", 20)\n\t  \t.attr(\"height\", 20)\n\t  \t.attr(\"class\",function(d){\n\t  \t\tvar type = \"\";\n\t  \t\tif(d.name.includes(\"expression\")){\n\t  \t\t\ttype = \"expression\";\n\t  \t\t}else if(d.name.includes(\"in_complexLink\")){\n\t  \t\t\ttype = \"in_complexLink\";\n\t  \t\t}\n\t  \t\treturn \"control \" + type})\n\t  \t.on(\"dblclick\", dblclick)\n\t  \t.call(force.drag);\n\t\t\n\tvar circleSM = svg.append(\"g\").selectAll(\"circle\")\n\t  \t.data(circleSMSet)\n  \t\t.enter().append(\"circle\")\n    \t.attr(\"r\", radius)\n\t\t.attr(\"class\",\"circleSM\")\n\t\t.on(\"mouseover\", mouseover)\n    \t.on(\"mouseout\", mouseout)\n    \t.on(\"dblclick\", dblclick)\n    \t.call(force.drag);\n\t  \n\tvar circle = svg.append(\"g\").selectAll(\"circle\")\n\t  \t.data(circleSet)\n  \t\t.enter().append(\"circle\")\n    \t.attr(\"r\", radius)\n    \t.attr(\"class\",function(d){\n    \t\tvar styleType = \"\";\n    \t\tif (d.name.includes(\"_P\")) {\n    \t\t\tstyleType=\"phosphorylation\";\n    \t\t}else if(d.name.includes(\"_chem_Affects\")){\n    \t\t\tstyleType=\"chem_Affects\"\n    \t\t}else if(d.name.includes(\"_STATE_CHANGE\")){\n    \t\t\tstyleType=\"state_change\"\n    \t\t}\n    \t\treturn \"circle \" + styleType;\n    \t})\n    \t.on(\"mouseover\", mouseover)\n    \t.on(\"mouseout\", mouseout)\n    \t.on(\"dblclick\", dblclick)\n    \t.call(force.drag);\n\t  \n  \tvar text = svg.append(\"g\").selectAll(\"text\")\n\t  \t.data(force.nodes())\n\t\t.enter().append(\"text\")\n\t  \t.attr(\"x\", 8)\n\t  \t.attr(\"y\", \".31em\")\n\t  \t.text(function(d) { \n\t    \tvar name = d.name;\n\t\t    if(d.name.includes(\"control\")){\n    \t  \t\tname=\"\";\n\t\t    }else if(d.name.includes(\"_\")){\n\t\t    \tname=d.name.split(\"_\")[0];\n\t\t    }\n\t\t    return name; });\n\t   \n  \tfunction tick() {\n\t\tpath.attr(\"x1\", function(d) { return d.source.x; })\n        .attr(\"y1\", function(d) { return d.source.y; })\n        .attr(\"x2\", function(d) { return d.target.x; })\n        .attr(\"y2\", function(d) { return d.target.y; });\n\t\tcontrol.attr(\"transform\", transform);\n\t\tcircle.attr(\"transform\", transform);\n\t\tcircleSM.attr(\"transform\", transform);\n\t\ttext.attr(\"transform\", transform);\n  \t}\n\t  \n  \tfunction transform(d) {\n  \t\t\n\t\treturn \"translate(\" + Math.max(radius, Math.min(width - radius, d.x)) + \",\" + Math.max(radius, Math.min(height - radius, d.y)) + \")\";\n  \t}\n\n  \tfunction mouseover() {\n\t  \td3.select(this).transition()\n      \t\t.duration(750)\n\t      \t.attr(\"r\", 16);\n\t}\n\n\tfunction mouseout() {\n\t  \td3.select(this).transition()\n\t      \t.duration(750)\n\t      \t.attr(\"r\", 6);\n\t}\n\n\n\tfunction dblclick(d) {\n   \t\td3.select(this).classed(\"fixed\", d.fixed = false);\n\t}\n\n\tfunction dragstart(d) {\n    \td3.select(this).classed(\"fixed\", d.fixed = true);\n\t}\n}",
    "created" : 1516388040429.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "771543620",
    "id" : "D766E81B",
    "lastKnownWriteTime" : 1516400214,
    "last_content_update" : 1516400214384,
    "path" : "C:/Users/cesar/Dropbox/Cuarto/EstÃ¡ndares/RpathDani/Rpath/rpath_app/www/graph.js",
    "project_path" : "rpath_app/www/graph.js",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "js"
}